(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    110608,       2345]
NotebookOptionsPosition[     61954,       1460]
NotebookOutlinePosition[    108223,       2312]
CellTagsIndexPosition[    108180,       2309]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Improved", " ", "Ansatz", " ", "for", " ", "free", " ", "boundaries"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"$Assumptions", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Gamma]", ">", "0"}], ",", 
       RowBox[{"L", ">", "1"}], ",", 
       RowBox[{"\[Sigma]", ">", "0"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myorder", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["L", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "L"}]]}], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["3", 
         RowBox[{"1", "/", "3"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", 
           RowBox[{"(", "L", ")"}]}], ")"}], 
         RowBox[{"2", "/", "3"}]], " ", "\[Delta]"}], 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "/", "3"}]], " ", "\[Gamma]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "L"}], ")"}], "2"]}]], "+", 
      RowBox[{"A2", " ", 
       RowBox[{"\[Delta]", "^", "2"}]}], " ", "+", 
      RowBox[{"A3", " ", 
       RowBox[{"\[Delta]", "^", "3"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"B", "=", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["L", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "L"}]]}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["3", 
         RowBox[{"1", "/", "3"}]], " ", "L", " ", "\[Delta]"}], 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"2", "/", "3"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", "L", ")"}]}], "+", 
             SuperscriptBox[
              RowBox[{"(", "L", ")"}], "2"]}], ")"}]}], ")"}], 
         RowBox[{"1", "/", "3"}]]}]], "+", 
      RowBox[{"B2", " ", 
       RowBox[{"\[Delta]", "^", "2"}]}], "+", 
      RowBox[{"B3", " ", 
       RowBox[{"\[Delta]", "^", "3"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "A3", " ", "and", " ", "B3", " ", "are", " ", "only", " ", "written", " ",
      "to", " ", "rule", " ", "out", " ", "third", " ", "order", " ", 
     "effects"}], "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.5863455621528993`*^9, 3.586345659273899*^9}, {
   3.586346582030899*^9, 3.586346583405899*^9}, {3.5863507654576683`*^9, 
   3.5863507769898214`*^9}, {3.5863538019371004`*^9, 
   3.5863538085657635`*^9}, {3.5863557247683835`*^9, 3.5863557261072497`*^9}, 
   3.586355757375123*^9, {3.586357580277709*^9, 3.586357588478529*^9}, {
   3.586360237645584*^9, 3.586360304916648*^9}, {3.586360660762384*^9, 
   3.5863606878779993`*^9}, 3.586507315249441*^9, {3.586507501932441*^9, 
   3.5865075039084415`*^9}, {3.5865079462074413`*^9, 
   3.5865080036484413`*^9}, {3.586508376861441*^9, 3.586508377459441*^9}, {
   3.586509772506441*^9, 3.5865097828854413`*^9}, {3.588479669333417*^9, 
   3.5884796701624994`*^9}, {3.5884797410285854`*^9, 3.588479741123595*^9}, {
   3.5884797945259347`*^9, 3.588479794825965*^9}, {3.600764324407654*^9, 
   3.6007643247026834`*^9}, {3.6007657298568316`*^9, 3.600765735916953*^9}, {
   3.610362079435986*^9, 3.6103620948005223`*^9}, {3.610363621688196*^9, 
   3.610363621968224*^9}, {3.6103638052275476`*^9, 3.6103638053935647`*^9}, {
   3.6202870903905993`*^9, 3.62028709320088*^9}, {3.620287263126871*^9, 
   3.620287266238182*^9}, {3.6202873766292205`*^9, 3.620287378714429*^9}, {
   3.6202874175823154`*^9, 3.6202874177233295`*^9}, {3.620287875443097*^9, 
   3.6202878756491175`*^9}, {3.636111942226048*^9, 3.636111979844964*^9}, {
   3.636112486749308*^9, 3.6361125064923077`*^9}, {3.636112598798768*^9, 
   3.6361126522423053`*^9}, {3.636113615054652*^9, 3.6361136249128504`*^9}, {
   3.6361152049736986`*^9, 3.636115205699771*^9}, {3.636115925949525*^9, 
   3.636115958304525*^9}, {3.636115996361525*^9, 3.636115999494525*^9}, {
   3.636116046604525*^9, 3.6361160479065247`*^9}, {3.6361170113963366`*^9, 
   3.636117011738371*^9}, {3.6361200370177755`*^9, 3.6361200412652*^9}, {
   3.637317062790447*^9, 3.6373170855163393`*^9}, {3.637317367045431*^9, 
   3.637317367332218*^9}, {3.637319473627575*^9, 3.637319478666061*^9}, {
   3.637323328679558*^9, 3.637323337237007*^9}, {3.637323844922428*^9, 
   3.637323852509921*^9}, {3.637324259840385*^9, 3.637324277215528*^9}, {
   3.637324321087311*^9, 3.637324322975589*^9}, {3.637324364053999*^9, 
   3.637324368653574*^9}, {3.6373244639019403`*^9, 3.6373244640927362`*^9}, {
   3.637324660945223*^9, 3.637324661127821*^9}, 3.637324751401677*^9, {
   3.63732560582056*^9, 3.6373256174464283`*^9}, {3.637325748216784*^9, 
   3.6373257586278267`*^9}, {3.637326031772296*^9, 3.637326065952731*^9}, {
   3.6822657137551603`*^9, 3.68226581920018*^9}, {3.682265852714823*^9, 
   3.682265901856307*^9}, 3.682266109203926*^9, 3.8913341008406253`*^9, {
   3.8913527424067917`*^9, 3.891352792226458*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"772d0272-f393-4b8a-bcad-a61f899da07f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Developing", " ", "the", " ", "objective", " ", "into", " ", "a", " ", 
    "series"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"h", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Gamma]"}], "/", "2"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"z", "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", "z"}], ")"}]}], ")"}], "^", "2"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Gamma]", " ", "L"}], ")"}], " ", 
       RowBox[{"z", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", "z"}], ")"}]}]}]}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hA0", "=", 
     RowBox[{"h", "/.", 
      RowBox[{"z", "\[Rule]", "A"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hA", "=", 
     RowBox[{
      RowBox[{"Normal", "[", 
       RowBox[{"Series", "[", 
        RowBox[{"hA0", ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "0", ",", "myorder"}], "}"}]}], "]"}], 
       "]"}], "//", "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hB0", "=", 
     RowBox[{"h", "/.", 
      RowBox[{"z", "\[Rule]", "B"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hB", "=", 
     RowBox[{
      RowBox[{"Normal", "[", 
       RowBox[{"Series", "[", 
        RowBox[{"hB0", ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "0", ",", "myorder"}], "}"}]}], "]"}], 
       "]"}], "//", "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]", "=", 
     RowBox[{"2", " ", "\[Kappa]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"typically", ",", " ", 
     RowBox[{"\[Alpha]", "=", 
      RowBox[{"2", " ", "\[Kappa]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"but", " ", "mu"}], "=", 
      RowBox[{"0", " ", "here"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.586345636680899*^9, 3.5863456753528996`*^9}, {
   3.586345718614899*^9, 3.586345868631899*^9}, {3.586346262398899*^9, 
   3.586346556529899*^9}, {3.586346594081899*^9, 3.5863467077038994`*^9}, {
   3.5863467496378994`*^9, 3.586346779122899*^9}, {3.5863468233368993`*^9, 
   3.586346826693899*^9}, {3.5863468658628993`*^9, 3.586346866091899*^9}, {
   3.586346920233899*^9, 3.5863469660058994`*^9}, {3.586347013082899*^9, 
   3.5863471400668993`*^9}, {3.5863471769228992`*^9, 3.586347183081899*^9}, {
   3.586347287608899*^9, 3.586347455179899*^9}, {3.586348094620899*^9, 
   3.5863480948268995`*^9}, 3.586348136444899*^9, {3.5863481930608993`*^9, 
   3.5863481974748993`*^9}, {3.586348252697899*^9, 3.586348259374899*^9}, {
   3.586348311348899*^9, 3.586348371379706*^9}, {3.5863486345102053`*^9, 
   3.5863486504129953`*^9}, {3.5863487695118103`*^9, 3.586348784117731*^9}, {
   3.586348877946493*^9, 3.586348895621703*^9}, {3.5863489855726976`*^9, 
   3.586348987918932*^9}, {3.5863490527474146`*^9, 3.586349053431483*^9}, {
   3.5863491088530245`*^9, 3.586349176676806*^9}, {3.5863492845765953`*^9, 
   3.586349337848922*^9}, {3.586349419116048*^9, 3.58634942803994*^9}, {
   3.5863503020053277`*^9, 3.586350315937721*^9}, 3.58635034822995*^9, {
   3.5863504298271084`*^9, 3.586350477785904*^9}, {3.5863505141325383`*^9, 
   3.586350514331558*^9}, 3.5863505953706613`*^9, {3.58635062546167*^9, 
   3.586350685886712*^9}, {3.5863507162557487`*^9, 3.586350751424265*^9}, {
   3.5863507847856007`*^9, 3.586350836230745*^9}, {3.586350948854006*^9, 
   3.586350986649785*^9}, {3.5863510401611357`*^9, 3.5863510745345726`*^9}, {
   3.5863511349596148`*^9, 3.5863511476648855`*^9}, {3.586351204261544*^9, 
   3.586351344650582*^9}, {3.5863513799921155`*^9, 3.586351383947511*^9}, {
   3.5863514457376895`*^9, 3.5863514459447103`*^9}, {3.586351544494564*^9, 
   3.5863515490550203`*^9}, {3.5863516010102153`*^9, 
   3.5863516214272566`*^9}, {3.586351693828496*^9, 3.586351696116725*^9}, {
   3.5863517356166744`*^9, 3.586351741602273*^9}, {3.586353848918798*^9, 
   3.586353868460752*^9}, {3.5863570395446405`*^9, 3.586357071728859*^9}, {
   3.586357271480832*^9, 3.586357282680952*^9}, 3.586360612056657*^9, 
   3.5863607710749693`*^9, {3.586360808642673*^9, 3.586360831464189*^9}, {
   3.586361065543333*^9, 3.5863610858781776`*^9}, {3.586361300311676*^9, 
   3.5863613006794357`*^9}, {3.586361395881859*^9, 3.58636140161913*^9}, {
   3.586361546170487*^9, 3.586361557824448*^9}, {3.586361663795589*^9, 
   3.5863616653426332`*^9}, {3.5865014650490274`*^9, 3.586501468319028*^9}, {
   3.5865017149170275`*^9, 3.5865017451140275`*^9}, {3.586502943878539*^9, 
   3.586502948677458*^9}, {3.586507507074441*^9, 3.586507542522441*^9}, {
   3.5865095408924413`*^9, 3.5865095628824415`*^9}, {3.588479660094493*^9, 
   3.5884796787053537`*^9}, {3.600765128139019*^9, 3.6007651287020755`*^9}, {
   3.610363766488674*^9, 3.6103637810181274`*^9}, {3.6202876408346386`*^9, 
   3.6202876442959843`*^9}, {3.636112523141308*^9, 3.636112532855308*^9}, {
   3.63611373423864*^9, 3.6361137407982955`*^9}, {3.636113795904806*^9, 
   3.636113797528968*^9}, {3.636119393445224*^9, 3.636119395955199*^9}, {
   3.6822659157298717`*^9, 3.6822659381489*^9}, {3.6822660030645027`*^9, 
   3.682266020111884*^9}, 3.682266099461152*^9, {3.8913530323778124`*^9, 
   3.8913530372347746`*^9}, {3.891874466181446*^9, 3.8918744758484488`*^9}, {
   3.8918753087442675`*^9, 3.891875324781104*^9}, {3.8919206163258424`*^9, 
   3.8919206432286406`*^9}, {3.8919210510857105`*^9, 3.891921052382289*^9}, {
   3.8919224467809134`*^9, 3.89192244916743*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"2249d861-c7eb-48e2-a450-5702e273470c"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.891920647565771*^9, 3.891920647565771*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"aa6b1b11-cb26-4163-90a8-f8bc7cd7bf4c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Developing", " ", "the", " ", "derivative", " ", "of", " ", "the", " ", 
    "integral"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"DI1", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"hB", " ", 
        RowBox[{"D", "[", 
         RowBox[{"B", ",", "\[Delta]"}], "]"}], 
        RowBox[{"Series", "[", " ", 
         RowBox[{
          RowBox[{"B", "^", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "-", "2"}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Delta]", ",", "0", ",", 
            RowBox[{"myorder", "-", "1"}]}], "}"}]}], "]"}]}], "-", 
       RowBox[{"hA", " ", 
        RowBox[{"D", "[", 
         RowBox[{"A", ",", "\[Delta]"}], "]"}], " ", 
        RowBox[{"Series", "[", " ", 
         RowBox[{
          RowBox[{"A", "^", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "-", "2"}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Delta]", ",", "0", ",", 
            RowBox[{"myorder", "-", "1"}]}], "}"}]}], "]"}]}]}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DI1", "=", 
     RowBox[{"Series", "[", 
      RowBox[{"DI1", ",", 
       RowBox[{"{", 
        RowBox[{"\[Delta]", ",", "0", ",", 
         RowBox[{"myorder", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"I11", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"Normal", "[", "DI1", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "0", ",", "t"}], "}"}]}], "]"}], "/.", 
       RowBox[{"t", "\[Rule]", "\[Delta]"}]}], " ", "//", "Simplify"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.586345636680899*^9, 3.5863456753528996`*^9}, {
   3.586345718614899*^9, 3.586345868631899*^9}, {3.586346262398899*^9, 
   3.586346556529899*^9}, {3.586346594081899*^9, 3.5863467077038994`*^9}, {
   3.5863467496378994`*^9, 3.586346779122899*^9}, {3.5863468233368993`*^9, 
   3.586346826693899*^9}, {3.5863468658628993`*^9, 3.586346866091899*^9}, {
   3.586346920233899*^9, 3.5863469660058994`*^9}, {3.586347013082899*^9, 
   3.5863471400668993`*^9}, {3.5863471769228992`*^9, 3.586347183081899*^9}, {
   3.586347287608899*^9, 3.586347455179899*^9}, {3.586348094620899*^9, 
   3.5863480948268995`*^9}, 3.586348136444899*^9, {3.5863481930608993`*^9, 
   3.5863481974748993`*^9}, {3.586348252697899*^9, 3.586348259374899*^9}, {
   3.586348311348899*^9, 3.586348371379706*^9}, {3.5863486345102053`*^9, 
   3.5863486504129953`*^9}, {3.5863487695118103`*^9, 3.586348784117731*^9}, {
   3.586348877946493*^9, 3.586348895621703*^9}, {3.5863489855726976`*^9, 
   3.586348987918932*^9}, {3.5863490527474146`*^9, 3.586349053431483*^9}, {
   3.5863491088530245`*^9, 3.586349176676806*^9}, {3.5863492845765953`*^9, 
   3.586349337848922*^9}, {3.586349419116048*^9, 3.58634942803994*^9}, {
   3.5863503020053277`*^9, 3.586350315937721*^9}, 3.58635034822995*^9, {
   3.5863504298271084`*^9, 3.586350477785904*^9}, {3.5863505141325383`*^9, 
   3.586350514331558*^9}, 3.5863505953706613`*^9, {3.58635062546167*^9, 
   3.586350685886712*^9}, {3.5863507162557487`*^9, 3.586350751424265*^9}, {
   3.5863507847856007`*^9, 3.586350836230745*^9}, {3.586350948854006*^9, 
   3.586350986649785*^9}, {3.5863510401611357`*^9, 3.5863510745345726`*^9}, {
   3.5863511349596148`*^9, 3.5863511476648855`*^9}, {3.586351204261544*^9, 
   3.586351344650582*^9}, {3.5863513799921155`*^9, 3.586351383947511*^9}, {
   3.5863514457376895`*^9, 3.5863514459447103`*^9}, {3.586351544494564*^9, 
   3.5863515490550203`*^9}, {3.5863516010102153`*^9, 
   3.5863516214272566`*^9}, {3.586351693828496*^9, 3.586351696116725*^9}, {
   3.5863517356166744`*^9, 3.586351741602273*^9}, {3.586353848918798*^9, 
   3.586353868460752*^9}, {3.5863570395446405`*^9, 3.586357071728859*^9}, {
   3.586357271480832*^9, 3.586357282680952*^9}, 3.586360612056657*^9, 
   3.5863607710749693`*^9, {3.586360808642673*^9, 3.586360831464189*^9}, {
   3.586361065543333*^9, 3.5863610858781776`*^9}, {3.586361300311676*^9, 
   3.5863613006794357`*^9}, {3.586361395881859*^9, 3.58636140161913*^9}, {
   3.586361546170487*^9, 3.586361557824448*^9}, {3.586361663795589*^9, 
   3.5863616653426332`*^9}, {3.5865014650490274`*^9, 3.586501468319028*^9}, {
   3.5865017149170275`*^9, 3.5865017451140275`*^9}, {3.586502943878539*^9, 
   3.586502948677458*^9}, {3.586507507074441*^9, 3.586507542522441*^9}, {
   3.5865095408924413`*^9, 3.5865095628824415`*^9}, {3.588479660094493*^9, 
   3.5884796787053537`*^9}, {3.600765128139019*^9, 3.6007651287020755`*^9}, {
   3.610363766488674*^9, 3.6103637810181274`*^9}, {3.6103638489989247`*^9, 
   3.610363852575282*^9}, {3.6202875159141474`*^9, 3.6202875230778637`*^9}, 
   3.636113029433906*^9, {3.6361135701157513`*^9, 3.6361135922841954`*^9}, {
   3.6361138296661816`*^9, 3.636113838779093*^9}, {3.6361170600001965`*^9, 
   3.6361170694591427`*^9}, {3.6361194230849276`*^9, 3.636119426760891*^9}, {
   3.637319694203871*^9, 3.637319700211074*^9}, {3.682266025580141*^9, 
   3.682266029872512*^9}, {3.891352988814785*^9, 3.8913530091978188`*^9}, {
   3.891922438565136*^9, 3.8919224413439903`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"717a44b0-0727-40e3-8527-ecd4799a5179"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"I10", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[Alpha]", "-", "1"}], ")"}]}], "hA", " ", 
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"B", "^", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "-", "1"}], ")"}]}], "-", 
        RowBox[{"A", "^", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "-", "1"}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Delta]", ",", "0", ",", "myorder"}], "}"}]}], "]"}]}], "//",
     "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1", "=", 
   RowBox[{
    RowBox[{"I10", "+", "I11"}], "//", "Simplify"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.586345636680899*^9, 3.5863456753528996`*^9}, {
   3.586345718614899*^9, 3.586345868631899*^9}, {3.586346262398899*^9, 
   3.586346556529899*^9}, {3.586346594081899*^9, 3.5863467077038994`*^9}, {
   3.5863467496378994`*^9, 3.586346779122899*^9}, {3.5863468233368993`*^9, 
   3.586346826693899*^9}, {3.5863468658628993`*^9, 3.586346866091899*^9}, {
   3.586346920233899*^9, 3.5863469660058994`*^9}, {3.586347013082899*^9, 
   3.5863471400668993`*^9}, {3.5863471769228992`*^9, 3.586347183081899*^9}, {
   3.586347287608899*^9, 3.586347455179899*^9}, {3.586348094620899*^9, 
   3.5863480948268995`*^9}, 3.586348136444899*^9, {3.5863481930608993`*^9, 
   3.5863481974748993`*^9}, {3.586348252697899*^9, 3.586348259374899*^9}, {
   3.586348311348899*^9, 3.586348371379706*^9}, {3.5863486345102053`*^9, 
   3.5863486504129953`*^9}, {3.5863487695118103`*^9, 3.586348784117731*^9}, {
   3.586348877946493*^9, 3.586348895621703*^9}, {3.5863489855726976`*^9, 
   3.586348987918932*^9}, {3.5863490527474146`*^9, 3.586349053431483*^9}, {
   3.5863491088530245`*^9, 3.586349176676806*^9}, {3.5863492845765953`*^9, 
   3.586349337848922*^9}, {3.586349419116048*^9, 3.58634942803994*^9}, {
   3.5863503020053277`*^9, 3.586350315937721*^9}, 3.58635034822995*^9, {
   3.5863504298271084`*^9, 3.586350477785904*^9}, {3.5863505141325383`*^9, 
   3.586350514331558*^9}, 3.5863505953706613`*^9, {3.58635062546167*^9, 
   3.586350685886712*^9}, {3.5863507162557487`*^9, 3.586350751424265*^9}, {
   3.5863507847856007`*^9, 3.586350836230745*^9}, {3.586350948854006*^9, 
   3.586350986649785*^9}, {3.5863510401611357`*^9, 3.5863510745345726`*^9}, {
   3.5863511349596148`*^9, 3.5863511476648855`*^9}, {3.586351204261544*^9, 
   3.586351344650582*^9}, {3.5863513799921155`*^9, 3.586351383947511*^9}, {
   3.5863514457376895`*^9, 3.5863514459447103`*^9}, {3.586351544494564*^9, 
   3.5863515490550203`*^9}, {3.5863516010102153`*^9, 
   3.5863516214272566`*^9}, {3.586351693828496*^9, 3.586351696116725*^9}, {
   3.5863517356166744`*^9, 3.586351741602273*^9}, {3.586353848918798*^9, 
   3.586353868460752*^9}, {3.5863570395446405`*^9, 3.586357071728859*^9}, {
   3.586357271480832*^9, 3.586357282680952*^9}, 3.586360612056657*^9, 
   3.5863607710749693`*^9, {3.586360808642673*^9, 3.586360831464189*^9}, {
   3.586361065543333*^9, 3.5863610858781776`*^9}, {3.586361300311676*^9, 
   3.5863613006794357`*^9}, {3.586361395881859*^9, 3.58636140161913*^9}, {
   3.586361546170487*^9, 3.586361557824448*^9}, {3.586361663795589*^9, 
   3.5863616653426332`*^9}, {3.5865014650490274`*^9, 3.586501468319028*^9}, {
   3.5865017149170275`*^9, 3.5865017451140275`*^9}, {3.586502943878539*^9, 
   3.586502948677458*^9}, {3.586507507074441*^9, 3.586507542522441*^9}, {
   3.5865095408924413`*^9, 3.5865095628824415`*^9}, {3.588479660094493*^9, 
   3.5884796787053537`*^9}, {3.600765128139019*^9, 3.6007651287020755`*^9}, {
   3.610363766488674*^9, 3.6103637810181274`*^9}, {3.6103638489989247`*^9, 
   3.610363852575282*^9}, {3.6202875159141474`*^9, 3.6202875230778637`*^9}, 
   3.636113029433906*^9, {3.6361135701157513`*^9, 3.6361135922841954`*^9}, {
   3.6361138296661816`*^9, 3.636113838779093*^9}, {3.6361151972499266`*^9, 
   3.63611519748995*^9}, {3.636115229211122*^9, 3.636115229475148*^9}, {
   3.636116689381139*^9, 3.636116694204621*^9}, {3.636116777496949*^9, 
   3.63611677940814*^9}, {3.636119428582873*^9, 3.6361194314228444`*^9}, {
   3.682266032851904*^9, 3.6822660349276257`*^9}, {3.8919224250990953`*^9, 
   3.8919224294852295`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"9a1d0bd8-2fd3-4d43-9e3a-820907aab0a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"first", " ", "equation", " ", "yields", " ", 
    RowBox[{"A2", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"eq1", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"2", 
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{"1", "/", " ", 
           RowBox[{"B", "^", "\[Alpha]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Delta]", ",", "0", ",", "myorder"}], "}"}]}], "]"}], 
        " ", "I1"}], "-", 
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Delta]", "^", "3"}], "/", 
           RowBox[{"(", 
            RowBox[{"1", "+", "B"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"\[Delta]", "^", "3"}]}], ")"}], "B"}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "0", ",", "myorder"}], "}"}]}], "]"}]}], "//",
       "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"coeff5list", "=", 
    RowBox[{
     RowBox[{"CoefficientList", "[", 
      RowBox[{"eq1", ",", " ", "\[Delta]"}], "]"}], "//", "Simplify"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"coeff5", "=", 
    RowBox[{"coeff5list", "[", 
     RowBox[{"[", "5", "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.586345636680899*^9, 3.5863456753528996`*^9}, {
   3.586345718614899*^9, 3.586345868631899*^9}, {3.586346262398899*^9, 
   3.586346556529899*^9}, {3.586346594081899*^9, 3.5863467077038994`*^9}, {
   3.5863467496378994`*^9, 3.586346779122899*^9}, {3.5863468233368993`*^9, 
   3.586346826693899*^9}, {3.5863468658628993`*^9, 3.586346866091899*^9}, {
   3.586346920233899*^9, 3.5863469660058994`*^9}, {3.586347013082899*^9, 
   3.5863471400668993`*^9}, {3.5863471769228992`*^9, 3.586347183081899*^9}, {
   3.586347287608899*^9, 3.586347455179899*^9}, {3.586348094620899*^9, 
   3.5863480948268995`*^9}, 3.586348136444899*^9, {3.5863481930608993`*^9, 
   3.5863481974748993`*^9}, {3.586348252697899*^9, 3.586348259374899*^9}, {
   3.586348311348899*^9, 3.586348371379706*^9}, {3.5863486345102053`*^9, 
   3.5863486504129953`*^9}, {3.5863487695118103`*^9, 3.586348784117731*^9}, {
   3.586348877946493*^9, 3.586348895621703*^9}, {3.5863489855726976`*^9, 
   3.586348987918932*^9}, {3.5863490527474146`*^9, 3.586349053431483*^9}, {
   3.5863491088530245`*^9, 3.586349176676806*^9}, {3.5863492845765953`*^9, 
   3.586349337848922*^9}, {3.586349419116048*^9, 3.58634942803994*^9}, {
   3.5863503020053277`*^9, 3.586350315937721*^9}, 3.58635034822995*^9, {
   3.5863504298271084`*^9, 3.586350477785904*^9}, {3.5863505141325383`*^9, 
   3.586350514331558*^9}, 3.5863505953706613`*^9, {3.58635062546167*^9, 
   3.586350685886712*^9}, {3.5863507162557487`*^9, 3.586350751424265*^9}, {
   3.5863507847856007`*^9, 3.586350836230745*^9}, {3.586350948854006*^9, 
   3.586350986649785*^9}, {3.5863510401611357`*^9, 3.5863510745345726`*^9}, {
   3.5863511349596148`*^9, 3.5863511476648855`*^9}, {3.586351204261544*^9, 
   3.586351344650582*^9}, {3.5863513799921155`*^9, 3.586351383947511*^9}, {
   3.5863514457376895`*^9, 3.5863514459447103`*^9}, {3.586351544494564*^9, 
   3.5863515490550203`*^9}, {3.5863516010102153`*^9, 
   3.5863516214272566`*^9}, {3.586351693828496*^9, 3.586351696116725*^9}, {
   3.5863517356166744`*^9, 3.586351741602273*^9}, 3.586351833260438*^9, {
   3.5863520098324904`*^9, 3.5863520153224907`*^9}, {3.5863524183904905`*^9, 
   3.5863524202934904`*^9}, {3.5863537487947865`*^9, 3.5863537829322*^9}, 
   3.5863555825966024`*^9, {3.586355641522709*^9, 3.586355663574504*^9}, {
   3.5863570053302193`*^9, 3.586357020882775*^9}, {3.586357285329217*^9, 
   3.586357300545738*^9}, {3.5863602217499943`*^9, 3.586360231876354*^9}, {
   3.5865016560540276`*^9, 3.5865016727230277`*^9}, {3.5865021035540276`*^9, 
   3.5865021084360275`*^9}, {3.5865025355070276`*^9, 3.5865025375630274`*^9}, 
   3.5865026523480277`*^9, {3.5865031999139705`*^9, 3.586503217474482*^9}, 
   3.5865070101224413`*^9, {3.586507482911441*^9, 3.586507486439441*^9}, {
   3.586507546763441*^9, 3.5865075633304415`*^9}, {3.586507870100441*^9, 
   3.586507913588441*^9}, {3.586509606640441*^9, 3.5865096351814413`*^9}, {
   3.5865097424224415`*^9, 3.586509750669441*^9}, {3.586509796263441*^9, 
   3.5865097982074413`*^9}, {3.5865100581524396`*^9, 3.586510059696211*^9}, {
   3.586510497864946*^9, 3.586510556991769*^9}, {3.58651061351375*^9, 
   3.5865106420526037`*^9}, {3.5865111853019233`*^9, 
   3.5865112545278454`*^9}, {3.588479765487031*^9, 3.5884798294944315`*^9}, 
   3.600765753967314*^9, {3.620287406348192*^9, 3.6202874252040777`*^9}, {
   3.636114950674271*^9, 3.636114973203524*^9}, {3.6361150605182543`*^9, 
   3.6361150982310257`*^9}, {3.6361151295691586`*^9, 3.636115163946596*^9}, {
   3.636115232156417*^9, 3.636115237508952*^9}, {3.6361164159648*^9, 
   3.636116431677371*^9}, {3.636116621396341*^9, 3.636116627995001*^9}, {
   3.636116999138111*^9, 3.6361170030995073`*^9}, {3.6361193698024597`*^9, 
   3.6361193724944334`*^9}, {3.636120217262556*^9, 3.6361202311099405`*^9}, {
   3.636120269486884*^9, 3.6361202780810566`*^9}, {3.6373233002392893`*^9, 
   3.63732330078249*^9}, {3.637323696856567*^9, 3.637323697644927*^9}, {
   3.6822660391386147`*^9, 3.682266043014889*^9}, {3.8919206589564934`*^9, 
   3.891920659537966*^9}, {3.8919207061762915`*^9, 3.891920706726486*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"57f951f2-0ecf-48c8-9972-a8c494cd1b2e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["3", 
       RowBox[{"1", "/", "3"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "L"}], ")"}], "3"], " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", " ", 
         SuperscriptBox["L", "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["6", 
          RowBox[{"1", "/", "3"}]], " ", "A2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", 
            "\[Gamma]"}], ")"}], 
          RowBox[{"2", "/", "3"}]]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["6", 
          RowBox[{"1", "/", "3"}]], " ", "A2", " ", "L", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", 
            "\[Gamma]"}], ")"}], 
          RowBox[{"2", "/", "3"}]]}], "-", 
        RowBox[{"2", " ", "L", " ", "\[Kappa]"}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"2", "/", "3"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", "\[Gamma]"}],
         ")"}], 
       RowBox[{"4", "/", "3"}]]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8919213838160477`*^9, 3.8919214205557165`*^9, 3.891921507615942*^9, 
   3.8919215380561714`*^9, 3.8919216131248264`*^9, 3.891922239846283*^9, 
   3.891922453692608*^9, {3.8919226293912773`*^9, 3.89192265279959*^9}, 
   3.8919226933443613`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"b25fb431-5912-4275-84d4-4a6011520bbe"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["3", 
     RowBox[{"1", "/", "3"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "L"}], ")"}], "3"], " ", "\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"5", " ", 
       SuperscriptBox["L", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["6", 
        RowBox[{"1", "/", "3"}]], " ", "A2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", 
          "\[Gamma]"}], ")"}], 
        RowBox[{"2", "/", "3"}]]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["6", 
        RowBox[{"1", "/", "3"}]], " ", "A2", " ", "L", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", 
          "\[Gamma]"}], ")"}], 
        RowBox[{"2", "/", "3"}]]}], "-", 
      RowBox[{"2", " ", "L", " ", "\[Kappa]"}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"2", "/", "3"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", "\[Gamma]"}], 
      ")"}], 
     RowBox[{"4", "/", "3"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.8919213838160477`*^9, 3.8919214205557165`*^9, 3.891921507615942*^9, 
   3.8919215380561714`*^9, 3.8919216131248264`*^9, 3.891922239846283*^9, 
   3.891922453692608*^9, {3.8919226293912773`*^9, 3.89192265279959*^9}, 
   3.8919226933443613`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"c873e54b-5122-46ab-adb3-f22a61f9509a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"A2sol", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"coeff5", "\[Equal]", "0"}], ",", "A2"}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"A20", "=", 
  RowBox[{"A2", "/.", 
   RowBox[{"A2sol", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"second", " ", "equation", " ", "yields", " ", 
    RowBox[{"B2", ":"}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.586345636680899*^9, 3.5863456753528996`*^9}, {
   3.586345718614899*^9, 3.586345868631899*^9}, {3.586346262398899*^9, 
   3.586346556529899*^9}, {3.586346594081899*^9, 3.5863467077038994`*^9}, {
   3.5863467496378994`*^9, 3.586346779122899*^9}, {3.5863468233368993`*^9, 
   3.586346826693899*^9}, {3.5863468658628993`*^9, 3.586346866091899*^9}, {
   3.586346920233899*^9, 3.5863469660058994`*^9}, {3.586347013082899*^9, 
   3.5863471400668993`*^9}, {3.5863471769228992`*^9, 3.586347183081899*^9}, {
   3.586347287608899*^9, 3.586347455179899*^9}, {3.586348094620899*^9, 
   3.5863480948268995`*^9}, 3.586348136444899*^9, {3.5863481930608993`*^9, 
   3.5863481974748993`*^9}, {3.586348252697899*^9, 3.586348259374899*^9}, {
   3.586348311348899*^9, 3.586348371379706*^9}, {3.5863486345102053`*^9, 
   3.5863486504129953`*^9}, {3.5863487695118103`*^9, 3.586348784117731*^9}, {
   3.586348877946493*^9, 3.586348895621703*^9}, {3.5863489855726976`*^9, 
   3.586348987918932*^9}, {3.5863490527474146`*^9, 3.586349053431483*^9}, {
   3.5863491088530245`*^9, 3.586349176676806*^9}, {3.5863492845765953`*^9, 
   3.586349337848922*^9}, {3.586349419116048*^9, 3.58634942803994*^9}, {
   3.5863503020053277`*^9, 3.586350315937721*^9}, 3.58635034822995*^9, {
   3.5863504298271084`*^9, 3.586350477785904*^9}, {3.5863505141325383`*^9, 
   3.586350514331558*^9}, 3.5863505953706613`*^9, {3.58635062546167*^9, 
   3.586350685886712*^9}, {3.5863507162557487`*^9, 3.586350751424265*^9}, {
   3.5863507847856007`*^9, 3.586350836230745*^9}, {3.586350948854006*^9, 
   3.586350986649785*^9}, {3.5863510401611357`*^9, 3.5863510745345726`*^9}, {
   3.5863511349596148`*^9, 3.5863511476648855`*^9}, {3.586351204261544*^9, 
   3.586351344650582*^9}, {3.5863513799921155`*^9, 3.586351383947511*^9}, {
   3.5863514457376895`*^9, 3.5863514459447103`*^9}, {3.586351544494564*^9, 
   3.5863515490550203`*^9}, {3.5863516010102153`*^9, 
   3.5863516214272566`*^9}, {3.586351693828496*^9, 3.586351696116725*^9}, {
   3.5863517356166744`*^9, 3.586351741602273*^9}, 3.586351833260438*^9, {
   3.5863520098324904`*^9, 3.5863520153224907`*^9}, {3.5863524183904905`*^9, 
   3.5863524202934904`*^9}, {3.5863537487947865`*^9, 3.5863537829322*^9}, 
   3.5863555825966024`*^9, {3.586355641522709*^9, 3.586355663574504*^9}, {
   3.5863570053302193`*^9, 3.586357020882775*^9}, {3.586357285329217*^9, 
   3.586357300545738*^9}, {3.5863602217499943`*^9, 3.586360231876354*^9}, {
   3.5865016560540276`*^9, 3.5865016727230277`*^9}, {3.5865021035540276`*^9, 
   3.5865021084360275`*^9}, {3.5865025355070276`*^9, 3.5865025375630274`*^9}, 
   3.5865026523480277`*^9, {3.5865031999139705`*^9, 3.586503217474482*^9}, 
   3.5865070101224413`*^9, {3.586507482911441*^9, 3.586507486439441*^9}, {
   3.586507546763441*^9, 3.5865075633304415`*^9}, {3.586507870100441*^9, 
   3.586507913588441*^9}, {3.586509606640441*^9, 3.5865096351814413`*^9}, {
   3.5865097424224415`*^9, 3.586509750669441*^9}, {3.586509796263441*^9, 
   3.5865097982074413`*^9}, {3.5865100581524396`*^9, 3.586510059696211*^9}, {
   3.586510497864946*^9, 3.586510556991769*^9}, {3.58651061351375*^9, 
   3.5865106420526037`*^9}, {3.5865111853019233`*^9, 
   3.5865112545278454`*^9}, {3.588479765487031*^9, 3.5884798294944315`*^9}, 
   3.600765753967314*^9, {3.620287406348192*^9, 3.6202874252040777`*^9}, {
   3.636114950674271*^9, 3.636114973203524*^9}, {3.6361150605182543`*^9, 
   3.6361150982310257`*^9}, {3.6361151295691586`*^9, 3.636115163946596*^9}, {
   3.636115232156417*^9, 3.636115237508952*^9}, {3.6361164159648*^9, 
   3.636116431677371*^9}, {3.636116621396341*^9, 3.636116627995001*^9}, {
   3.636116999138111*^9, 3.6361170030995073`*^9}, {3.6361193698024597`*^9, 
   3.6361193724944334`*^9}, {3.636120217262556*^9, 3.6361202311099405`*^9}, {
   3.636120269486884*^9, 3.6361202780810566`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"4305aa3a-0ce3-414c-96ec-66a49295d46b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"A2", "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["L", "2"], " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "5"}], " ", "L"}], "+", 
        RowBox[{"2", " ", "\[Kappa]"}]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["6", 
       RowBox[{"1", "/", "3"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", "\[Gamma]"}],
         ")"}], 
       RowBox[{"5", "/", "3"}]]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.891921383870855*^9, 3.891921420615739*^9, 3.891921507680993*^9, 
   3.891921538121167*^9, 3.8919216132814937`*^9, 3.8919222400153584`*^9, 
   3.891922453755241*^9, {3.8919226297602777`*^9, 3.8919226529376154`*^9}, 
   3.891922693482667*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"ba1d75c2-e5fe-4d3c-871e-17f644e2f58d"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["L", "2"], " ", "\[Gamma]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "5"}], " ", "L"}], "+", 
     RowBox[{"2", " ", "\[Kappa]"}]}], ")"}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox["6", 
    RowBox[{"1", "/", "3"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", "\[Gamma]"}], 
     ")"}], 
    RowBox[{"5", "/", "3"}]]}]]], "Output",
 CellChangeTimes->{
  3.891921383870855*^9, 3.891921420615739*^9, 3.891921507680993*^9, 
   3.891921538121167*^9, 3.8919216132814937`*^9, 3.8919222400153584`*^9, 
   3.891922453755241*^9, {3.8919226297602777`*^9, 3.8919226529376154`*^9}, 
   3.891922693482667*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"d3f9e841-a35e-400a-85bf-a08d902a84fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"eq2", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"hB", "-", "hA"}], ")"}], 
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{"2", "/", 
           RowBox[{"B", "^", "2"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Delta]", ",", "0", ",", "myorder"}], "}"}]}], "]"}]}], 
       "-", 
       RowBox[{"2", " ", "\[Alpha]", " ", "I1", " ", 
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"B", "^", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "+", "1"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Delta]", ",", "0", ",", "myorder"}], "}"}]}], "]"}]}], 
       "-", 
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"\[Delta]", "^", "3"}]}], ")"}], "^", "2"}], "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"\[Delta]", "^", "3"}]}], ")"}], "B"}]}], ")"}], "^",
             "2"}]}], "-", 
          RowBox[{"1", "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"B", "+", "1"}], ")"}], "^", "2"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "0", ",", "myorder"}], "}"}]}], "]"}]}], "//",
       "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"coeff4list", "=", 
    RowBox[{"CoefficientList", "[", 
     RowBox[{"eq2", ",", " ", "\[Delta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"coeff4", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"coeff4list", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/.", 
      RowBox[{"A2", "\[Rule]", "A20"}]}], "//", "Simplify"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"B2sol", "=", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"coeff4", "\[Equal]", "0"}], ",", "B2"}], "]"}], "//", 
     "FullSimplify"}]}], "\[IndentingNewLine]", 
   RowBox[{"B20", "=", 
    RowBox[{"B2", "/.", 
     RowBox[{"%", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "verify", " ", "that", " ", "that", " ", "the", " ", "two", " ", 
     "coefficients", " ", "are", " ", "the", " ", "same"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A20", "-", "B20"}], "//", "FullSimplify"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", " "}]}]], "Input",
 CellChangeTimes->{{3.586345636680899*^9, 3.5863456753528996`*^9}, {
   3.586345718614899*^9, 3.586345868631899*^9}, {3.586346262398899*^9, 
   3.586346556529899*^9}, {3.586346594081899*^9, 3.5863467077038994`*^9}, {
   3.5863467496378994`*^9, 3.586346779122899*^9}, {3.5863468233368993`*^9, 
   3.586346826693899*^9}, {3.5863468658628993`*^9, 3.586346866091899*^9}, {
   3.586346920233899*^9, 3.5863469660058994`*^9}, {3.586347013082899*^9, 
   3.5863471400668993`*^9}, {3.5863471769228992`*^9, 3.586347183081899*^9}, {
   3.586347287608899*^9, 3.586347455179899*^9}, {3.586348094620899*^9, 
   3.5863480948268995`*^9}, 3.586348136444899*^9, {3.5863481930608993`*^9, 
   3.5863481974748993`*^9}, {3.586348252697899*^9, 3.586348259374899*^9}, {
   3.586348311348899*^9, 3.586348371379706*^9}, {3.5863486345102053`*^9, 
   3.5863486504129953`*^9}, {3.5863487695118103`*^9, 3.586348784117731*^9}, {
   3.586348877946493*^9, 3.586348895621703*^9}, {3.5863489855726976`*^9, 
   3.586348987918932*^9}, {3.5863490527474146`*^9, 3.586349053431483*^9}, {
   3.5863491088530245`*^9, 3.586349176676806*^9}, {3.5863492845765953`*^9, 
   3.586349337848922*^9}, {3.586349419116048*^9, 3.58634942803994*^9}, {
   3.5863503020053277`*^9, 3.586350315937721*^9}, 3.58635034822995*^9, {
   3.5863504298271084`*^9, 3.586350477785904*^9}, {3.5863505141325383`*^9, 
   3.586350514331558*^9}, 3.5863505953706613`*^9, {3.58635062546167*^9, 
   3.586350685886712*^9}, {3.5863507162557487`*^9, 3.586350751424265*^9}, {
   3.5863507847856007`*^9, 3.586350836230745*^9}, {3.586350948854006*^9, 
   3.586350986649785*^9}, {3.5863510401611357`*^9, 3.5863510745345726`*^9}, {
   3.5863511349596148`*^9, 3.5863511476648855`*^9}, {3.586351204261544*^9, 
   3.586351344650582*^9}, {3.5863513799921155`*^9, 3.586351383947511*^9}, {
   3.5863514457376895`*^9, 3.5863514459447103`*^9}, {3.586351544494564*^9, 
   3.5863515490550203`*^9}, {3.5863516010102153`*^9, 
   3.5863516214272566`*^9}, {3.586351693828496*^9, 3.586351696116725*^9}, {
   3.5863517356166744`*^9, 3.586351741602273*^9}, 3.586351833260438*^9, {
   3.5863520098324904`*^9, 3.5863520153224907`*^9}, {3.5863524183904905`*^9, 
   3.5863524202934904`*^9}, {3.5863537487947865`*^9, 3.5863537829322*^9}, 
   3.5863555825966024`*^9, {3.586355641522709*^9, 3.586355663574504*^9}, {
   3.5863570053302193`*^9, 3.586357020882775*^9}, {3.586357285329217*^9, 
   3.586357300545738*^9}, {3.5863602217499943`*^9, 3.586360231876354*^9}, {
   3.5865016560540276`*^9, 3.5865016727230277`*^9}, {3.5865021035540276`*^9, 
   3.5865021084360275`*^9}, {3.5865025355070276`*^9, 3.5865025375630274`*^9}, 
   3.5865026523480277`*^9, {3.5865031999139705`*^9, 3.586503217474482*^9}, 
   3.5865070101224413`*^9, {3.586507482911441*^9, 3.586507486439441*^9}, {
   3.586507546763441*^9, 3.5865075633304415`*^9}, {3.586507870100441*^9, 
   3.586507913588441*^9}, {3.586509606640441*^9, 3.5865096351814413`*^9}, {
   3.5865097424224415`*^9, 3.586509750669441*^9}, {3.586509796263441*^9, 
   3.5865097982074413`*^9}, {3.5865100581524396`*^9, 3.586510059696211*^9}, {
   3.586510497864946*^9, 3.586510556991769*^9}, {3.58651061351375*^9, 
   3.5865106420526037`*^9}, {3.5865111853019233`*^9, 
   3.5865112545278454`*^9}, {3.588479765487031*^9, 3.5884798140418863`*^9}, 
   3.600765758727409*^9, {3.636120317359846*^9, 3.636120318389867*^9}, {
   3.636120365953823*^9, 3.63612040150554*^9}, {3.636120445025414*^9, 
   3.636120545630432*^9}, 3.6822660528690166`*^9, {3.682266214385047*^9, 
   3.682266300995883*^9}, {3.891920713653962*^9, 3.891920714175971*^9}, {
   3.8919216035553236`*^9, 3.8919216040753794`*^9}, {3.891922399711873*^9, 
   3.8919224012891283`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"17468163-2ccd-4811-9e0c-f81193ad57ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "L"}], ")"}], "4"], " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["6", 
          RowBox[{"1", "/", "3"}]], " ", "A2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "L"}], ")"}], "2"], " ", "\[Gamma]"}], 
        "+", 
        RowBox[{
         SuperscriptBox["6", 
          RowBox[{"1", "/", "3"}]], " ", "B2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "L"}], ")"}], "2"], " ", "\[Gamma]"}], 
        "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", 
            "\[Gamma]"}], ")"}], 
          RowBox[{"1", "/", "3"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"5", " ", "L"}], "-", 
           RowBox[{"2", " ", "\[Kappa]"}]}], ")"}]}]}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", "\[Gamma]"}], 
       ")"}], 
      RowBox[{"4", "/", "3"}]]]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SuperscriptBox["L", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", "\[Gamma]"}],
         ")"}], 
       RowBox[{"2", "/", "3"}]]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["6", 
         RowBox[{"2", "/", "3"}]]}], " ", "B2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "L"}], ")"}], "5"], " ", "L", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"3", " ", "L"}]}], ")"}], " ", "\[Gamma]"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["A2", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "L"}], ")"}], "6"], " ", "\[Gamma]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", 
          "\[Gamma]"}], ")"}], 
        RowBox[{"2", "/", "3"}]]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["B2", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "L"}], ")"}], "6"], " ", "\[Gamma]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", 
          "\[Gamma]"}], ")"}], 
        RowBox[{"2", "/", "3"}]]}], "+", 
      RowBox[{
       SuperscriptBox["6", 
        RowBox[{"2", "/", "3"}]], " ", "A2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "L"}], ")"}], "5"], " ", "L", " ", 
       "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"3", " ", "L"}], "-", 
         RowBox[{"4", " ", "\[Kappa]"}]}], ")"}]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["6", 
        RowBox[{"1", "/", "3"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "L"}], ")"}], "3"], " ", "L", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", 
          "\[Gamma]"}], ")"}], 
        RowBox[{"1", "/", "3"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"A3", " ", "\[Gamma]"}], "+", 
         RowBox[{"B3", " ", "\[Gamma]"}], "+", 
         RowBox[{
          SuperscriptBox["L", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{"A3", " ", "\[Gamma]"}], "+", 
            RowBox[{"B3", " ", "\[Gamma]"}]}], ")"}]}], "-", "\[Kappa]", "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Kappa]", "2"]}], "+", 
         RowBox[{"L", " ", 
          RowBox[{"(", 
           RowBox[{"3", "-", 
            RowBox[{"2", " ", "A3", " ", "\[Gamma]"}], "-", 
            RowBox[{"2", " ", "B3", " ", "\[Gamma]"}], "+", 
            RowBox[{"3", " ", "\[Kappa]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.8919213838959656`*^9, 3.8919214206453133`*^9, 3.891921507704897*^9, 
   3.891921538144979*^9, 3.8919216142257223`*^9, 3.8919222409647894`*^9, 
   3.891922453955123*^9, {3.891922630624528*^9, 3.891922653816496*^9}, 
   3.8919226943310423`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"1b887e36-14ee-44e1-9e04-f279e11ea0d1"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "L"}], ")"}], "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"5", " ", 
       SuperscriptBox["L", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["6", 
        RowBox[{"1", "/", "3"}]], " ", "B2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", 
          "\[Gamma]"}], ")"}], 
        RowBox[{"2", "/", "3"}]]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["6", 
        RowBox[{"1", "/", "3"}]], " ", "B2", " ", "L", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", 
          "\[Gamma]"}], ")"}], 
        RowBox[{"2", "/", "3"}]]}], "-", 
      RowBox[{"2", " ", "L", " ", "\[Kappa]"}]}], ")"}]}], 
   RowBox[{"2", " ", 
    SuperscriptBox["L", "2"]}]]}]], "Output",
 CellChangeTimes->{
  3.8919213838959656`*^9, 3.8919214206453133`*^9, 3.891921507704897*^9, 
   3.891921538144979*^9, 3.8919216142257223`*^9, 3.8919222409647894`*^9, 
   3.891922453955123*^9, {3.891922630624528*^9, 3.891922653816496*^9}, 
   3.8919226943623233`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"066a011b-be2b-4893-a829-cdd964e3dd02"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"B2", "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["L", "2"], " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "5"}], " ", "L"}], "+", 
        RowBox[{"2", " ", "\[Kappa]"}]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["6", 
       RowBox[{"1", "/", "3"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", "\[Gamma]"}],
         ")"}], 
       RowBox[{"5", "/", "3"}]]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8919213838959656`*^9, 3.8919214206453133`*^9, 3.891921507704897*^9, 
   3.891921538144979*^9, 3.8919216142257223`*^9, 3.8919222409647894`*^9, 
   3.891922453955123*^9, {3.891922630624528*^9, 3.891922653816496*^9}, 
   3.891922694384045*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"a3a994c8-86b3-4907-ae0e-29ab96022998"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["L", "2"], " ", "\[Gamma]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "5"}], " ", "L"}], "+", 
     RowBox[{"2", " ", "\[Kappa]"}]}], ")"}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox["6", 
    RowBox[{"1", "/", "3"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", "\[Gamma]"}], 
     ")"}], 
    RowBox[{"5", "/", "3"}]]}]]], "Output",
 CellChangeTimes->{
  3.8919213838959656`*^9, 3.8919214206453133`*^9, 3.891921507704897*^9, 
   3.891921538144979*^9, 3.8919216142257223`*^9, 3.8919222409647894`*^9, 
   3.891922453955123*^9, {3.891922630624528*^9, 3.891922653816496*^9}, 
   3.891922694384045*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"2d8acf02-a359-49d2-9107-09c7deec1ef6"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.8919213838959656`*^9, 3.8919214206453133`*^9, 3.891921507704897*^9, 
   3.891921538144979*^9, 3.8919216142257223`*^9, 3.8919222409647894`*^9, 
   3.891922453955123*^9, {3.891922630624528*^9, 3.891922653816496*^9}, 
   3.8919226943998127`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"16281a12-bcd6-4aab-9582-7e8f36e5bf66"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"lower", " ", "trading", " ", "boundary"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"\[Zeta]m", "=", 
   RowBox[{
    RowBox[{"A", "/.", 
     RowBox[{"A2", "\[Rule]", "A20"}]}], "//", "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.682266324019497*^9, 3.682266380801*^9}, {
  3.8913528458883033`*^9, 3.891352848834485*^9}, {3.891921471395646*^9, 
  3.891921477525716*^9}, {3.8919215206059823`*^9, 3.891921522116147*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"0bed90f2-7f70-46cc-86e4-7ccc65bc48fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["L", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "L"}]]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["3", 
     RowBox[{"1", "/", "3"}]], " ", 
    SuperscriptBox["L", "2"], " ", "\[Gamma]", " ", "\[Delta]"}], 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"2", "/", "3"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", "\[Gamma]"}], 
      ")"}], 
     RowBox[{"4", "/", "3"}]]}]], "+", 
  RowBox[{"A3", " ", 
   SuperscriptBox["\[Delta]", "3"]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["L", "2"], " ", "\[Gamma]", " ", 
    SuperscriptBox["\[Delta]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "5"}], " ", "L"}], "+", 
      RowBox[{"2", " ", "\[Kappa]"}]}], ")"}]}], 
   RowBox[{"2", " ", 
    SuperscriptBox["6", 
     RowBox[{"1", "/", "3"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", "\[Gamma]"}], 
      ")"}], 
     RowBox[{"5", "/", "3"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.891921383935842*^9, 3.8919214206858683`*^9, 3.891921507801038*^9, 
   3.8919215381956196`*^9, 3.8919216144505186`*^9, 3.891922241202608*^9, 
   3.8919224539928083`*^9, {3.8919226308455715`*^9, 3.891922654018652*^9}, 
   3.8919226945467377`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"86de6f4e-2cad-4f75-a66a-7bfe7a31f2ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"upper", " ", "trading", " ", "boundary"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"\[Zeta]p", "=", 
   RowBox[{
    RowBox[{"B", "/.", 
     RowBox[{"B2", "\[Rule]", " ", "B20"}]}], "//", "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.682266324019497*^9, 3.682266380801*^9}, {
  3.8913528458883033`*^9, 3.891352848834485*^9}, {3.8919214806035137`*^9, 
  3.891921483256689*^9}, {3.8919215243231707`*^9, 3.891921525216066*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"d62b1458-aeeb-49c1-a242-a62e38bf15ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["L", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "L"}]]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["3", 
     RowBox[{"1", "/", "3"}]], " ", 
    SuperscriptBox["L", "2"], " ", "\[Gamma]", " ", "\[Delta]"}], 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"2", "/", "3"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", "\[Gamma]"}], 
      ")"}], 
     RowBox[{"4", "/", "3"}]]}]], "+", 
  RowBox[{"B3", " ", 
   SuperscriptBox["\[Delta]", "3"]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["L", "2"], " ", "\[Gamma]", " ", 
    SuperscriptBox["\[Delta]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "5"}], " ", "L"}], "+", 
      RowBox[{"2", " ", "\[Kappa]"}]}], ")"}]}], 
   RowBox[{"2", " ", 
    SuperscriptBox["6", 
     RowBox[{"1", "/", "3"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", "\[Gamma]"}], 
      ")"}], 
     RowBox[{"5", "/", "3"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.8919213839458313`*^9, 3.891921420695696*^9, 3.8919215078558407`*^9, 
   3.8919215381958094`*^9, 3.8919216145406604`*^9, 3.89192224129261*^9, 
   3.89192245400853*^9, {3.891922630930064*^9, 3.891922654103312*^9}, 
   3.891922694615452*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"3e4731f2-1371-4955-862b-d7e816df00db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"\[Zeta]m", "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Zeta]m"}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Delta]", ",", "0", ",", 
      RowBox[{"myorder", "-", "2"}]}], "}"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"\[Zeta]p", "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Zeta]p"}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Delta]", ",", "0", ",", 
      RowBox[{"myorder", "-", "2"}]}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8918745660479307`*^9, 3.8918745838121758`*^9}, 
   3.8919207396420717`*^9, {3.8919213598413653`*^9, 3.8919214176655436`*^9}, {
   3.8919214854533987`*^9, 3.8919215344414515`*^9}, {3.891922638507601*^9, 
   3.8919226453961253`*^9}, {3.891922677320927*^9, 3.8919226789590054`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"c9fc33e9-e359-4077-9df2-88a35c38dfd0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"L", "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["3", 
      RowBox[{"1", "/", "3"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", "\[Gamma]"}], 
       ")"}], 
      RowBox[{"2", "/", "3"}]], " ", "\[Delta]"}], 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"2", "/", "3"}]], " ", "\[Gamma]"}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", "\[Gamma]"}], 
       ")"}], 
      RowBox[{"1", "/", "3"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "L"}], "+", "\[Kappa]"}], ")"}], " ", 
     SuperscriptBox["\[Delta]", "2"]}], 
    RowBox[{
     SuperscriptBox["6", 
      RowBox[{"1", "/", "3"}]], " ", "\[Gamma]"}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Delta]", "]"}], "3"],
    SeriesData[$CellContext`\[Delta], 0, {}, 0, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Delta], 
   0, {$CellContext`L, -2^Rational[-2, 3] 
    3^Rational[
      1, 3] $CellContext`\[Gamma]^(-1) ((-1 + $CellContext`L) $CellContext`L \
$CellContext`\[Gamma])^Rational[2, 3], 
    6^Rational[-1, 
       3] $CellContext`\[Gamma]^(-1) ((-1 + $CellContext`L) $CellContext`L \
$CellContext`\[Gamma])^
     Rational[1, 3] (-$CellContext`L + $CellContext`\[Kappa])}, 0, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.891921538493017*^9, 3.89192161489071*^9, 3.8919222416340714`*^9, 
   3.8919224540398273`*^9, {3.891922631245921*^9, 3.8919226542722826`*^9}, 
   3.8919226947468543`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"be268e71-72ff-4793-a266-d57081684a05"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"L", "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["3", 
      RowBox[{"1", "/", "3"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", "\[Gamma]"}], 
       ")"}], 
      RowBox[{"2", "/", "3"}]], " ", "\[Delta]"}], 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"2", "/", "3"}]], " ", "\[Gamma]"}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "L"}], ")"}], " ", "L", " ", "\[Gamma]"}], 
       ")"}], 
      RowBox[{"1", "/", "3"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "L"}], "+", "\[Kappa]"}], ")"}], " ", 
     SuperscriptBox["\[Delta]", "2"]}], 
    RowBox[{
     SuperscriptBox["6", 
      RowBox[{"1", "/", "3"}]], " ", "\[Gamma]"}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Delta]", "]"}], "3"],
    SeriesData[$CellContext`\[Delta], 0, {}, 0, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Delta], 
   0, {$CellContext`L, 2^Rational[-2, 3] 
    3^Rational[
      1, 3] $CellContext`\[Gamma]^(-1) ((-1 + $CellContext`L) $CellContext`L \
$CellContext`\[Gamma])^Rational[2, 3], 
    6^Rational[-1, 
       3] $CellContext`\[Gamma]^(-1) ((-1 + $CellContext`L) $CellContext`L \
$CellContext`\[Gamma])^
     Rational[1, 3] (-$CellContext`L + $CellContext`\[Kappa])}, 0, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.891921538493017*^9, 3.89192161489071*^9, 3.8919222416340714`*^9, 
   3.8919224540398273`*^9, {3.891922631245921*^9, 3.8919226542722826`*^9}, 
   3.891922694784272*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"e94b631f-2634-4477-b1bd-a0549cec95ec"]
}, Open  ]]
},
WindowSize->{949, 527},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[(
            CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{
            CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5027c22a-de95-4628-a3c2-d7f2f638ac83"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 5583, 122, 294, "Input",ExpressionUUID->"772d0272-f393-4b8a-bcad-a61f899da07f"],
Cell[6143, 144, 5779, 112, 238, "Input",ExpressionUUID->"2249d861-c7eb-48e2-a450-5702e273470c"],
Cell[11925, 258, 171, 2, 28, "Input",ExpressionUUID->"aa6b1b11-cb26-4163-90a8-f8bc7cd7bf4c"],
Cell[12099, 262, 5347, 100, 105, "Input",ExpressionUUID->"717a44b0-0727-40e3-8527-ecd4799a5179"],
Cell[17449, 364, 4357, 73, 48, "Input",ExpressionUUID->"9a1d0bd8-2fd3-4d43-9e3a-820907aab0a3"],
Cell[CellGroupData[{
Cell[21831, 441, 5606, 98, 105, "Input",ExpressionUUID->"57f951f2-0ecf-48c8-9972-a8c494cd1b2e"],
Cell[27440, 541, 1939, 55, 55, "Output",ExpressionUUID->"b25fb431-5912-4275-84d4-4a6011520bbe"],
Cell[29382, 598, 1770, 53, 55, "Output",ExpressionUUID->"c873e54b-5122-46ab-adb3-f22a61f9509a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31189, 656, 4401, 67, 67, "Input",ExpressionUUID->"4305aa3a-0ce3-414c-96ec-66a49295d46b"],
Cell[35593, 725, 1006, 28, 53, "Output",ExpressionUUID->"ba1d75c2-e5fe-4d3c-871e-17f644e2f58d"],
Cell[36602, 755, 873, 25, 53, "Output",ExpressionUUID->"d3f9e841-a35e-400a-85bf-a08d902a84fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37512, 785, 6487, 129, 276, "Input",ExpressionUUID->"17468163-2ccd-4811-9e0c-f81193ad57ab"],
Cell[44002, 916, 5115, 154, 106, "Output",ExpressionUUID->"1b887e36-14ee-44e1-9e04-f279e11ea0d1"],
Cell[49120, 1072, 1453, 42, 53, "Output",ExpressionUUID->"066a011b-be2b-4893-a829-cdd964e3dd02"],
Cell[50576, 1116, 1006, 28, 53, "Output",ExpressionUUID->"a3a994c8-86b3-4907-ae0e-29ab96022998"],
Cell[51585, 1146, 873, 25, 53, "Output",ExpressionUUID->"2d8acf02-a359-49d2-9107-09c7deec1ef6"],
Cell[52461, 1173, 374, 6, 32, "Output",ExpressionUUID->"16281a12-bcd6-4aab-9582-7e8f36e5bf66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52872, 1184, 559, 12, 48, "Input",ExpressionUUID->"0bed90f2-7f70-46cc-86e4-7ccc65bc48fb"],
Cell[53434, 1198, 1567, 49, 53, "Output",ExpressionUUID->"86de6f4e-2cad-4f75-a66a-7bfe7a31f2ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55038, 1252, 566, 12, 48, "Input",ExpressionUUID->"d62b1458-aeeb-49c1-a242-a62e38bf15ca"],
Cell[55607, 1266, 1561, 49, 53, "Output",ExpressionUUID->"3e4731f2-1371-4955-862b-d7e816df00db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57205, 1320, 1012, 25, 48, "Input",ExpressionUUID->"c9fc33e9-e359-4077-9df2-88a35c38dfd0"],
Cell[58220, 1347, 1859, 54, 53, "Output",ExpressionUUID->"be268e71-72ff-4793-a266-d57081684a05"],
Cell[60082, 1403, 1856, 54, 75, "Output",ExpressionUUID->"e94b631f-2634-4477-b1bd-a0549cec95ec"]
}, Open  ]]
}
]
*)

